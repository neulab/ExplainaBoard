name: Continuous Integration
on:
  push:
    branches:
      - main
  pull_request:
    branches: ["**"]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('.github/workflows/requirements.lock.${{ matrix.python-version }}') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
      - name: Install dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -r .github/workflows/requirements.lock.${{ matrix.python-version }}
      - name: Install data dependencies
        run: |
          python -m spacy download en_core_web_sm
          python -m nltk.downloader punkt
      - name: test
        run: bash cicd/run_unit_tests.sh
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('.github/workflows/requirements.lock.${{ matrix.python-version }}') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
      - name: Install dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -r .github/workflows/requirements.lock.${{ matrix.python-version }}
      - name: Install data dependencies
        run: |
          python -m spacy download en_core_web_sm
          python -m nltk.downloader punkt
      - name: test
        run: bash cicd/run_integration_tests.sh
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: format
        uses: pre-commit/action@v2.0.3
        with:
          extra_args: black --all-files
  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: isort
        uses: pre-commit/action@v2.0.3
        with:
          extra_args: isort --all-files
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: lint
        uses: pre-commit/action@v2.0.3
        with:
          extra_args: flake8 --all-files
      # TODO(odashi): Replace upgrade-type-hints with an appropriate flake8 plugin
      # (e.g., flake8-pep585) if the one got the audience enough.
      - name: lint-pep585-compliant
        uses: pre-commit/action@v2.0.3
        with:
          extra_args: upgrade-type-hints --all-files
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: mypy
        uses: pre-commit/action@v2.0.3
        with:
          extra_args: mypy --all-files
